{"version":3,"file":"static/js/835.641ef371.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/Notification/Notification.styled.js","redux/contacts/selectors.js","components/Notification/Notification.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  width: 295px;\n  height: 62px;\n  padding: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  justify-content: space-between;\n  border-radius: 8px;\n  background-color: white;\n  margin-bottom: 15px;\n\n  &:last-child {\n    margin-bottom: 25px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 320px;\n    height: 70px;\n\n    &:last-child {\n      margin-bottom: 0px;\n    }\n  }\n`;\n\nexport const ContactName = styled.p`\n  font-size: 18px;\n  margin-bottom: 3px;\n  color: #0000cc;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    margin-bottom: 5px;\n  }\n`;\n\nexport const ContactNumber = styled.p`\n  font-size: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  width: 70px;\n  height: 35px;\n  margin: auto 0;\n  border: none;\n  border-radius: 6px;\n  font-size: 16px;\n  background-color: #ff4d4d;\n  transition: background-color 300ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: #ff0000;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    width: 80px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operation';\nimport { ContactItem } from './ContactItem.styled';\nimport { Box } from 'components/Box';\nimport { ContactName, ContactNumber, DeleteBtn } from './ContactItem.styled';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id))\n      .unwrap()\n      .then(() =>\n        toast.success('Contact is deleted', {\n          duration: 3000,\n          position: 'top-center',\n          style: {\n            width: '280px',\n            height: '60px',\n            fontSize: '18px',\n          },\n        })\n      )\n      .catch(() =>\n        toast.error('Something went wrong... Please, try again', {\n          duration: 3000,\n          position: 'top-center',\n          style: {\n            width: '280px',\n            height: '60px',\n            fontSize: '18px',\n          },\n        })\n      );\n  };\n\n  return (\n    <ContactItem>\n      <Box>\n        <ContactName>{contact.name}</ContactName>\n        <ContactNumber>{contact.number}</ContactNumber>\n      </Box>\n      <DeleteBtn type=\"button\" onClick={handleDelete}>\n        Delete\n      </DeleteBtn>\n    </ContactItem>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  font-size: 20px;\n  text-align: center;\n  color: #b30000;\n`;\n","export const selectContacts = state => state.contacts.contacts;\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.value;\n","import { Message } from './Notification.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Notification = () => {\n  const filter = useSelector(selectFilter);\n  return <Message>{filter} not found</Message>;\n};\n","import { Contact } from '../ContactItem/ContactItem';\nimport { Notification } from '../Notification/Notification';\nimport { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectFilter,\n  selectLoading,\n} from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectLoading);\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <div>\n      <ul>\n        {filteredContacts.map(contact => {\n          return <Contact contact={contact} key={contact.id} />;\n        })}\n      </ul>\n      {filteredContacts.length < 1 && !isLoading && <Notification />}\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FindLabel = styled.label`\n  margin-bottom: 8px;\n  font-size: 20px;\n  text-align: center;\n`;\n\nexport const FindInput = styled.input`\n  width: 250px;\n  height: 30px;\n  padding: 3px 6px;\n  margin: 0 auto;\n  border-radius: 4px;\n  border: 1px solid black;\n  font-size: 18px;\n  transition: border 300ms linear;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #0000cc;\n  }\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { Box } from '../Box';\nimport { FindLabel, FindInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const value = event.target.value;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" mb=\"20px\">\n      <FindLabel htmlFor=\"text\">Find contacts by name</FindLabel>\n      <FindInput type=\"text\" id=\"text\" onChange={handleChange} />\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  border-radius: 12px;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  width: 280px;\n  margin: 0 auto 20px;\n  background-color: #f4f4f4;\n\n  @media screen and (min-width: 768px) {\n    width: 314px;\n    padding: 30px;\n    border: 2px;\n  }\n`;\n\nexport const ContactLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 8px;\n  font-size: 16px;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const ContactInput = styled.input`\n  height: 30px;\n  margin-top: 6px;\n  padding: 3px 6px;\n  border-radius: 4px;\n  border: 1px solid black;\n  font-size: 16px;\n  transition: border 300ms linear;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #008000;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    width: 250px;\n    margin-top: 8px;\n  }\n`;\n\nexport const AddBtn = styled.button`\n  width: 100%;\n  height: 35px;\n  padding: 3px 6px;\n  border-radius: 4px;\n  margin: 8px auto 0px;\n  border: none;\n  font-size: 16px;\n  background-color: #456afa;\n  transition: background-color 300ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: #f1c232;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    width: 250px;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operation';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport toast from 'react-hot-toast';\nimport { Form, ContactLabel, ContactInput, AddBtn } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const addedName = form.elements.name.value;\n    const addedNumber = form.elements.number.value;\n\n    if (contacts.find(contact => contact.name === addedName)) {\n      toast.error(`${addedName} is already in contacts`, {\n        duration: 3000,\n        position: 'top-center',\n        style: {\n          width: '280px',\n          height: '60px',\n          fontSize: '18px',\n        },\n      });\n    } else {\n      dispatch(addContact({ name: addedName, number: addedNumber }))\n        .unwrap()\n        .then(() =>\n          toast.success('Contact is added', {\n            duration: 3000,\n            position: 'top-center',\n            style: {\n              width: '280px',\n              height: '60px',\n              fontSize: '18px',\n            },\n          })\n        );\n    }\n\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <ContactLabel>\n        Name\n        <ContactInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </ContactLabel>\n      <ContactLabel>\n        Number\n        <ContactInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </ContactLabel>\n      <AddBtn type=\"submit\">Add contact</AddBtn>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Subtitle = styled.h2`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n    font-size: 28px;\n    font-size: 24px;\n    font-weight: 600;\n    margin-bottom: 18px;\n    text-align: center;\n  }\n`;\n\nexport const ContactWrap = styled.div`\n  margin: 0 auto;\n  padding-top: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 700px;\n    padding-top: 50px;\n    padding-top: 50px;\n    display: flex;\n    justify-content: space-between;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 800px;\n  }\n`;\n\nexport const Loading = styled.p`\n  font-size: 18px;\n  font-weight: 600;\n  margin-bottom: 10px;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    font-size: 22px;\n    margin-bottom: 20px;\n  }\n`;\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Box } from 'components/Box';\nimport { Subtitle, ContactWrap, Loading } from './Contacts.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectLoading, selectError } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operation';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactWrap>\n      <Box>\n        <Subtitle>Contacts</Subtitle>\n        <Filter />\n        {isLoading && !error && <Loading>Loading...</Loading>}\n        <ContactList />\n      </Box>\n      <Box>\n        <Subtitle>Add contact</Subtitle>\n        <ContactForm />\n      </Box>\n    </ContactWrap>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactItem","styled","ContactName","ContactNumber","DeleteBtn","Contact","contact","dispatch","useDispatch","Box","name","number","type","onClick","deleteContact","id","unwrap","then","toast","duration","position","style","width","height","fontSize","catch","Message","selectContacts","state","contacts","selectLoading","isLoading","selectError","error","selectFilter","filter","value","Notification","useSelector","ContactList","normalizedFilter","toLowerCase","filteredContacts","includes","map","length","FindLabel","FindInput","Filter","display","flexDirection","mb","htmlFor","onChange","event","target","setFilter","Form","ContactLabel","ContactInput","AddBtn","ContactForm","onSubmit","preventDefault","form","addedName","elements","addedNumber","find","addContact","reset","pattern","title","required","Subtitle","ContactWrap","Loading","useEffect","fetchContacts"],"sourceRoot":""}